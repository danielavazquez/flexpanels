html {
    box-sizing: border-box;
    background: #ffc600;
    font-family: 'helvetica neue';
    font-size: 20px;
    font-weight: 200;
  }
  
  body {
    margin: 0;
  }
  
  *, *:before, *:after {
    box-sizing: inherit;
  }
  .panels {
    min-height: 100vh;
    overflow: hidden;
    display: flex; //this is as much as the flex child needs as big as the words, split it amongst the panels
  } 
  .panel {
    background: #6B0F9C;
    box-shadow: inset 0 0 0 5px rgba(255,255,255,0.1);
    color: white;
    text-align: center;
    align-items: center;
    /* Safari transitionend event.propertyName === flex */
    /* Chrome + FF transitionend event.propertyName === flex-grow */
    transition:
      font-size 0.7s cubic-bezier(0.61,-0.19, 0.7,-0.11), //allows you to define a shape with all the characteristics you may like
      flex 0.7s cubic-bezier(0.61,-0.19, 0.7,-0.11),
      background 0.2s;
    font-size: 20px;
    background-size: cover;
    background-position: center;
    flex: 1; //flex of 1 means each evenly distribute across the page
    justify-content: center;
    display: flex;
    flex-direction: column;  //flex container here is panel and flex items are panel1 ... and we are also going to make panel 1 ... a container
  }
  .panel1 { background-image:url(https://source.unsplash.com/gYl-UtwNg_I/1500x1500); }
  .panel2 { background-image:url(https://source.unsplash.com/rFKUFzjPYiQ/1500x1500); }
  .panel3 { background-image:url(https://images.unsplash.com/photo-1465188162913-8fb5709d6d57?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&cs=tinysrgb&w=1500&h=1500&fit=crop&s=967e8a713a4e395260793fc8c802901d); }
  .panel4 { background-image:url(https://source.unsplash.com/ITjiVXcwVng/1500x1500); }
  .panel5 { background-image:url(https://source.unsplash.com/3MNzGlQM7qs/1500x1500); }
  
  
  /* Flex Items */
  .panel > * {  //flexbox is nested and nested and nested
    margin: 0;
    width: 100%;
    transition: transform 0.5s;
    flex: 1 0 auto;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .panel > *:first-child { transform: translateY(-100%); } //puts the first children off screen a nd transitions itseld in and out
  .panel.open-active > *:first-child { transform: translateY(0); } //when panel has a class of open active we are going to translate y 0 
  .panel > *:last-child { transform: translateY(100%); }
  .panel.open-active > *:last-child { transform: translateY(0); } //open-active class makes panelsa animate themselves
  .panel p {
    text-transform: uppercase;
    font-family: 'Amatic SC', cursive;
    text-shadow: 0 0 4px rgba(0, 0, 0, 0.72), 0 0 14px rgba(0, 0, 0, 0.45);
    font-size: 2em;
  }
  
  .panel p:nth-child(2) {
    font-size: 4em;
  }
  .panel.open {
    flex: 5; //when it has open-active class will take 5 times as much as room as rest of the panels
    font-size: 40px;
  }
  
  @media only screen and (max-width: 600px) {
    .panel p {
      font-size: 1em;
    }
  }